//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30410653
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.4
.target sm_75, texmode_independent
.address_size 64

	// .globl	interp
.global .samplerref SAMPLER = { addr_mode_0 = clamp_to_border, addr_mode_1 = clamp_to_border, addr_mode_2 = clamp_to_border, filter_mode = nearest, force_unnormalized_coords = 1 };

.entry interp(
	.param .u32 interp_param_0,
	.param .u32 interp_param_1,
	.param .u32 interp_param_2,
	.param .texref interp_param_3,
	.param .surfref interp_param_4,
	.param .f32 interp_param_5,
	.param .f32 interp_param_6,
	.param .f32 interp_param_7,
	.param .f32 interp_param_8,
	.param .u32 interp_param_9,
	.param .u32 interp_param_10,
	.param .u32 interp_param_11
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<47>;
	.reg .b32 	%r<53>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r11, [interp_param_0];
	ld.param.u32 	%r7, [interp_param_1];
	ld.param.u32 	%r12, [interp_param_2];
	ld.param.f32 	%f30, [interp_param_5];
	ld.param.f32 	%f31, [interp_param_6];
	ld.param.f32 	%f32, [interp_param_7];
	ld.param.f32 	%f33, [interp_param_8];
	ld.param.u32 	%r8, [interp_param_9];
	ld.param.u32 	%r9, [interp_param_10];
	ld.param.u32 	%r10, [interp_param_11];
	mov.b32	%r13, %envreg3;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %ntid.x;
	mad.lo.s32 	%r16, %r14, %r15, %r13;
	mov.u32 	%r17, %tid.x;
	add.s32 	%r1, %r16, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mov.b32	%r20, %envreg4;
	mad.lo.s32 	%r21, %r18, %r19, %r20;
	mov.u32 	%r22, %tid.y;
	add.s32 	%r2, %r21, %r22;
	mov.u32 	%r23, %ctaid.z;
	mov.u32 	%r24, %ntid.z;
	mov.b32	%r25, %envreg5;
	mad.lo.s32 	%r26, %r23, %r24, %r25;
	mov.u32 	%r27, %tid.z;
	add.s32 	%r3, %r26, %r27;
	setp.lt.s32	%p1, %r1, %r11;
	setp.lt.s32	%p2, %r2, %r7;
	and.pred  	%p3, %p1, %p2;
	setp.lt.s32	%p4, %r3, %r12;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB0_12;
	bra.uni 	BB0_1;

BB0_1:
	div.s32 	%r39, %r3, %r10;
	rem.s32 	%r41, %r3, %r10;
	cvt.rn.f32.s32	%f38, %r41;
	fma.rn.f32 	%f35, %f38, %f30, %f32;
	cvt.rn.f32.s32	%f39, %r2;
	fma.rn.f32 	%f37, %f39, %f31, %f33;
	// inline asm
	cvt.rmi.f32.f32 	%f34, %f35;
	// inline asm
	// inline asm
	cvt.rmi.f32.f32 	%f36, %f37;
	// inline asm
	// inline asm
	mul24.lo.s32 	%r28, %r1, %r9;
	// inline asm
	// inline asm
	mul24.lo.s32 	%r31, %r39, %r8;
	// inline asm
	cvt.rzi.s32.f32	%r42, %f36;
	cvt.rzi.s32.f32	%r43, %f34;
	mov.u32 	%r44, 0;
	max.s32 	%r45, %r44, %r42;
	max.s32 	%r46, %r44, %r43;
	add.s32 	%r47, %r28, %r45;
	add.s32 	%r48, %r31, %r46;
	tex.2d.v4.f32.s32	{%f1, %f45, %f46, %f5}, [interp_param_3, SAMPLER, {%r47, %r48}];
	// inline asm
	mad.lo.s32 	%r34, %r1, %r7, %r2;
	// inline asm
	// inline asm
	mad.lo.s32 	%r38, %r39, %r10, %r41;
	// inline asm
	suq.channel_order.b32 	%r6, [interp_param_4];
	setp.gt.s32	%p6, %r6, 4277;
	@%p6 bra 	BB0_5;

	setp.eq.s32	%p9, %r6, 4273;
	@%p9 bra 	BB0_10;
	bra.uni 	BB0_3;

BB0_10:
	mov.f32 	%f44, 0f00000000;
	mov.f32 	%f43, %f5;
	mov.f32 	%f45, %f44;
	mov.f32 	%f46, %f44;
	bra.uni 	BB0_11;

BB0_5:
	setp.eq.s32	%p7, %r6, 4278;
	@%p7 bra 	BB0_6;

	setp.ne.s32	%p8, %r6, 4279;
	@%p8 bra 	BB0_8;

	mov.f32 	%f43, %f5;
	mov.f32 	%f44, %f1;
	bra.uni 	BB0_11;

BB0_3:
	setp.eq.s32	%p10, %r6, 4275;
	@%p10 bra 	BB0_4;
	bra.uni 	BB0_8;

BB0_4:
	mov.f32 	%f45, 0f00000000;
	mov.f32 	%f43, %f1;
	mov.f32 	%f44, %f5;
	mov.f32 	%f46, %f45;
	bra.uni 	BB0_11;

BB0_6:
	mov.f32 	%f43, %f46;
	mov.f32 	%f44, %f45;
	mov.f32 	%f45, %f1;
	mov.f32 	%f46, %f5;
	bra.uni 	BB0_11;

BB0_8:
	mov.f32 	%f43, %f1;
	mov.f32 	%f44, %f45;
	mov.f32 	%f45, %f46;
	mov.f32 	%f46, %f5;

BB0_11:
	mov.b32 	 %r49, %f43;
	mov.b32 	 %r50, %f44;
	mov.b32 	 %r51, %f45;
	mov.b32 	 %r52, %f46;
	sust.p.2d.v4.b32.trap 	[interp_param_4, {%r34, %r38}], {%r49, %r50, %r51, %r52};

BB0_12:
	ret;
}

	// .globl	interp3D
.entry interp3D(
	.param .u32 interp3D_param_0,
	.param .u32 interp3D_param_1,
	.param .u32 interp3D_param_2,
	.param .texref interp3D_param_3,
	.param .surfref interp3D_param_4,
	.param .f32 interp3D_param_5,
	.param .f32 interp3D_param_6,
	.param .f32 interp3D_param_7,
	.param .f32 interp3D_param_8,
	.param .f32 interp3D_param_9,
	.param .f32 interp3D_param_10,
	.param .u32 interp3D_param_11,
	.param .u32 interp3D_param_12,
	.param .u32 interp3D_param_13,
	.param .u32 interp3D_param_14,
	.param .u32 interp3D_param_15
)
{
	.reg .pred 	%p<11>;
	.reg .f32 	%f<62>;
	.reg .b32 	%r<60>;
	.reg .b64 	%rd<4>;


	ld.param.u32 	%r13, [interp3D_param_0];
	ld.param.u32 	%r7, [interp3D_param_1];
	ld.param.u32 	%r14, [interp3D_param_2];
	ld.param.f32 	%f30, [interp3D_param_5];
	ld.param.f32 	%f31, [interp3D_param_6];
	ld.param.f32 	%f32, [interp3D_param_7];
	ld.param.f32 	%f33, [interp3D_param_8];
	ld.param.f32 	%f34, [interp3D_param_9];
	ld.param.f32 	%f35, [interp3D_param_10];
	ld.param.u32 	%r8, [interp3D_param_11];
	ld.param.u32 	%r9, [interp3D_param_12];
	ld.param.u32 	%r10, [interp3D_param_13];
	ld.param.u32 	%r11, [interp3D_param_14];
	ld.param.u32 	%r12, [interp3D_param_15];
	mov.b32	%r15, %envreg3;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %ntid.x;
	mad.lo.s32 	%r18, %r16, %r17, %r15;
	mov.u32 	%r19, %tid.x;
	add.s32 	%r1, %r18, %r19;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %ntid.y;
	mov.b32	%r22, %envreg4;
	mad.lo.s32 	%r23, %r20, %r21, %r22;
	mov.u32 	%r24, %tid.y;
	add.s32 	%r2, %r23, %r24;
	mov.u32 	%r25, %ctaid.z;
	mov.u32 	%r26, %ntid.z;
	mov.b32	%r27, %envreg5;
	mad.lo.s32 	%r28, %r25, %r26, %r27;
	mov.u32 	%r29, %tid.z;
	add.s32 	%r3, %r28, %r29;
	setp.lt.s32	%p1, %r1, %r13;
	setp.lt.s32	%p2, %r2, %r7;
	and.pred  	%p3, %p1, %p2;
	setp.lt.s32	%p4, %r3, %r14;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB1_12;
	bra.uni 	BB1_1;

BB1_1:
	div.s32 	%r37, %r3, %r11;
	rem.s32 	%r39, %r3, %r11;
	cvt.rn.f32.s32	%f42, %r39;
	fma.rn.f32 	%f37, %f42, %f30, %f33;
	div.s32 	%r40, %r2, %r12;
	cvt.rn.f32.s32	%f43, %r40;
	fma.rn.f32 	%f39, %f43, %f31, %f34;
	rem.s32 	%r41, %r2, %r12;
	cvt.rn.f32.s32	%f44, %r41;
	fma.rn.f32 	%f41, %f44, %f32, %f35;
	// inline asm
	cvt.rmi.f32.f32 	%f36, %f37;
	// inline asm
	// inline asm
	cvt.rmi.f32.f32 	%f38, %f39;
	// inline asm
	// inline asm
	cvt.rmi.f32.f32 	%f40, %f41;
	// inline asm
	// inline asm
	mul24.lo.s32 	%r30, %r10, %r9;
	// inline asm
	// inline asm
	mul24.lo.s32 	%r33, %r1, %r30;
	// inline asm
	// inline asm
	mul24.lo.s32 	%r36, %r37, %r8;
	// inline asm
	cvt.rzi.s32.f32	%r42, %f38;
	cvt.rzi.s32.f32	%r43, %f40;
	cvt.rzi.s32.f32	%r44, %f36;
	mov.u32 	%r45, 0;
	max.s32 	%r46, %r45, %r42;
	max.s32 	%r47, %r45, %r43;
	max.s32 	%r48, %r45, %r44;
	cvt.rn.f32.s32	%f45, %r33;
	cvt.rn.f32.s32	%f46, %r46;
	add.f32 	%f47, %f46, %f34;
	cvt.rn.f32.s32	%f48, %r10;
	fma.rn.f32 	%f49, %f48, %f47, %f45;
	cvt.rn.f32.s32	%f50, %r47;
	add.f32 	%f51, %f50, %f49;
	add.f32 	%f52, %f51, %f35;
	cvt.rzi.s32.f32	%r49, %f52;
	add.s32 	%r50, %r36, %r48;
	cvt.rn.f32.s32	%f53, %r50;
	add.f32 	%f54, %f53, %f33;
	cvt.rzi.s32.f32	%r51, %f54;
	tex.2d.v4.f32.s32	{%f1, %f60, %f61, %f5}, [interp3D_param_3, SAMPLER, {%r49, %r51}];
	div.s32 	%r52, %r7, %r12;
	mul.lo.s32 	%r53, %r1, %r7;
	mad.lo.s32 	%r54, %r40, %r52, %r53;
	add.s32 	%r4, %r54, %r41;
	add.s32 	%r55, %r11, %r11;
	mad.lo.s32 	%r5, %r37, %r55, %r39;
	suq.channel_order.b32 	%r6, [interp3D_param_4];
	setp.gt.s32	%p6, %r6, 4277;
	@%p6 bra 	BB1_5;

	setp.eq.s32	%p9, %r6, 4273;
	@%p9 bra 	BB1_10;
	bra.uni 	BB1_3;

BB1_10:
	mov.f32 	%f59, 0f00000000;
	mov.f32 	%f58, %f5;
	mov.f32 	%f60, %f59;
	mov.f32 	%f61, %f59;
	bra.uni 	BB1_11;

BB1_5:
	setp.eq.s32	%p7, %r6, 4278;
	@%p7 bra 	BB1_6;

	setp.ne.s32	%p8, %r6, 4279;
	@%p8 bra 	BB1_8;

	mov.f32 	%f58, %f5;
	mov.f32 	%f59, %f1;
	bra.uni 	BB1_11;

BB1_3:
	setp.eq.s32	%p10, %r6, 4275;
	@%p10 bra 	BB1_4;
	bra.uni 	BB1_8;

BB1_4:
	mov.f32 	%f60, 0f00000000;
	mov.f32 	%f58, %f1;
	mov.f32 	%f59, %f5;
	mov.f32 	%f61, %f60;
	bra.uni 	BB1_11;

BB1_6:
	mov.f32 	%f58, %f61;
	mov.f32 	%f59, %f60;
	mov.f32 	%f60, %f1;
	mov.f32 	%f61, %f5;
	bra.uni 	BB1_11;

BB1_8:
	mov.f32 	%f58, %f1;
	mov.f32 	%f59, %f60;
	mov.f32 	%f60, %f61;
	mov.f32 	%f61, %f5;

BB1_11:
	mov.b32 	 %r56, %f58;
	mov.b32 	 %r57, %f59;
	mov.b32 	 %r58, %f60;
	mov.b32 	 %r59, %f61;
	sust.p.2d.v4.b32.trap 	[interp3D_param_4, {%r4, %r5}], {%r56, %r57, %r58, %r59};

BB1_12:
	ret;
}


  