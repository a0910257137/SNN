//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30410653
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.4
.target sm_75, texmode_independent
.address_size 64

	// .globl	pooling
.global .samplerref SAMPLER = { addr_mode_0 = clamp_to_border, addr_mode_1 = clamp_to_border, addr_mode_2 = clamp_to_border, filter_mode = nearest, force_unnormalized_coords = 1 };

.entry pooling(
	.param .u32 pooling_param_0,
	.param .u32 pooling_param_1,
	.param .u32 pooling_param_2,
	.param .texref pooling_param_3,
	.param .align 8 .b8 pooling_param_4[8],
	.param .u32 pooling_param_5,
	.param .align 8 .b8 pooling_param_6[8],
	.param .align 8 .b8 pooling_param_7[8],
	.param .align 8 .b8 pooling_param_8[8],
	.param .surfref pooling_param_9
)
{
	.reg .pred 	%p<44>;
	.reg .f32 	%f<205>;
	.reg .b32 	%r<142>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r42, [pooling_param_0];
	ld.param.u32 	%r32, [pooling_param_1];
	ld.param.u32 	%r43, [pooling_param_2];
	ld.param.v2.u32 	{%r44, %r45}, [pooling_param_4];
	ld.param.u32 	%r35, [pooling_param_5];
	ld.param.v2.u32 	{%r46, %r47}, [pooling_param_6];
	ld.param.v2.u32 	{%r48, %r49}, [pooling_param_7];
	ld.param.v2.u32 	{%r50, %r51}, [pooling_param_8];
	mov.b32	%r52, %envreg3;
	mov.u32 	%r53, %ctaid.x;
	mov.u32 	%r54, %ntid.x;
	mad.lo.s32 	%r55, %r53, %r54, %r52;
	mov.u32 	%r56, %tid.x;
	add.s32 	%r1, %r55, %r56;
	mov.u32 	%r57, %ctaid.y;
	mov.u32 	%r58, %ntid.y;
	mov.b32	%r59, %envreg4;
	mad.lo.s32 	%r60, %r57, %r58, %r59;
	mov.u32 	%r61, %tid.y;
	add.s32 	%r2, %r60, %r61;
	mov.u32 	%r62, %ctaid.z;
	mov.u32 	%r63, %ntid.z;
	mov.b32	%r64, %envreg5;
	mad.lo.s32 	%r65, %r62, %r63, %r64;
	mov.u32 	%r66, %tid.z;
	add.s32 	%r3, %r65, %r66;
	setp.ge.s32	%p1, %r1, %r42;
	setp.ge.s32	%p2, %r2, %r32;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r43;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_39;

	div.s32 	%r71, %r3, %r35;
	// inline asm
	mul24.lo.s32 	%r67, %r71, %r35;
	// inline asm
	sub.s32 	%r74, %r3, %r67;
	// inline asm
	mul24.lo.s32 	%r70, %r71, %r44;
	// inline asm
	neg.s32 	%r76, %r46;
	// inline asm
	mad.lo.s32 	%r73, %r74, %r48, %r76;
	// inline asm
	neg.s32 	%r80, %r47;
	// inline asm
	mad.lo.s32 	%r77, %r2, %r49, %r80;
	// inline asm
	// inline asm
	mul24.lo.s32 	%r81, %r1, %r45;
	// inline asm
	mov.f32 	%f193, 0fFF7FFFFF;
	setp.lt.s32	%p6, %r50, 1;
	mov.f32 	%f194, %f193;
	mov.f32 	%f195, %f193;
	mov.f32 	%f196, %f193;
	@%p6 bra 	BB0_28;

	and.b32  	%r12, %r51, 3;
	setp.ge.s32	%p7, %r77, %r45;
	selp.u32	%r85, 1, 0, %p7;
	shr.u32 	%r86, %r77, 31;
	or.b32  	%r87, %r85, %r86;
	setp.eq.s32	%p8, %r87, 0;
	mov.u32 	%r137, 0;
	add.s32 	%r88, %r77, %r81;
	selp.b32	%r13, %r88, -1, %p8;
	mov.f32 	%f193, 0fFF7FFFFF;
	mov.f32 	%f194, %f193;
	mov.f32 	%f195, %f193;
	mov.f32 	%f196, %f193;

BB0_3:
	add.s32 	%r89, %r137, %r73;
	add.s32 	%r90, %r89, %r70;
	setp.ge.s32	%p9, %r89, %r44;
	shr.u32 	%r91, %r89, 31;
	selp.u32	%r92, 1, 0, %p9;
	or.b32  	%r93, %r92, %r91;
	setp.eq.s32	%p10, %r93, 0;
	selp.b32	%r15, %r90, -1, %p10;
	setp.eq.s32	%p11, %r15, -1;
	setp.lt.s32	%p12, %r51, 1;
	or.pred  	%p13, %p11, %p12;
	@%p13 bra 	BB0_27;

	mov.f32 	%f116, 0f00000000;
	mov.u32 	%r138, 0;
	setp.eq.s32	%p14, %r12, 0;
	@%p14 bra 	BB0_5;

	setp.eq.s32	%p15, %r12, 1;
	@%p15 bra 	BB0_13;

	setp.eq.s32	%p16, %r12, 2;
	@%p16 bra 	BB0_10;

	setp.eq.s32	%p17, %r13, -1;
	mov.u32 	%r138, 1;
	@%p17 bra 	BB0_10;

	tex.2d.v4.f32.s32	{%f117, %f118, %f119, %f120}, [pooling_param_3, SAMPLER, {%r13, %r15}];
	max.f32 	%f193, %f193, %f117;
	max.f32 	%f194, %f194, %f118;
	max.f32 	%f195, %f195, %f119;
	max.f32 	%f196, %f196, %f120;

BB0_10:
	add.s32 	%r99, %r138, %r77;
	add.s32 	%r100, %r99, %r81;
	setp.ge.s32	%p18, %r99, %r45;
	shr.u32 	%r101, %r99, 31;
	selp.u32	%r102, 1, 0, %p18;
	or.b32  	%r103, %r102, %r101;
	setp.eq.s32	%p19, %r103, 0;
	selp.b32	%r17, %r100, -1, %p19;
	setp.eq.s32	%p20, %r17, -1;
	@%p20 bra 	BB0_12;

	tex.2d.v4.f32.s32	{%f121, %f122, %f123, %f124}, [pooling_param_3, SAMPLER, {%r17, %r15}];
	max.f32 	%f193, %f193, %f121;
	max.f32 	%f194, %f194, %f122;
	max.f32 	%f195, %f195, %f123;
	max.f32 	%f196, %f196, %f124;

BB0_12:
	add.s32 	%r138, %r138, 1;

BB0_13:
	add.s32 	%r104, %r138, %r77;
	add.s32 	%r105, %r104, %r81;
	setp.ge.s32	%p21, %r104, %r45;
	shr.u32 	%r106, %r104, 31;
	selp.u32	%r107, 1, 0, %p21;
	or.b32  	%r108, %r107, %r106;
	setp.eq.s32	%p22, %r108, 0;
	selp.b32	%r20, %r105, -1, %p22;
	setp.eq.s32	%p23, %r20, -1;
	@%p23 bra 	BB0_14;
	bra.uni 	BB0_15;

BB0_14:
	mov.f32 	%f173, %f193;
	mov.f32 	%f174, %f194;
	mov.f32 	%f175, %f195;
	mov.f32 	%f176, %f196;
	bra.uni 	BB0_16;

BB0_5:
	mov.f32 	%f173, %f193;
	mov.f32 	%f174, %f194;
	mov.f32 	%f175, %f195;
	mov.f32 	%f176, %f196;
	mov.f32 	%f193, %f116;
	mov.f32 	%f194, %f116;
	mov.f32 	%f195, %f116;
	mov.f32 	%f196, %f116;
	bra.uni 	BB0_17;

BB0_15:
	tex.2d.v4.f32.s32	{%f125, %f126, %f127, %f128}, [pooling_param_3, SAMPLER, {%r20, %r15}];
	max.f32 	%f173, %f193, %f125;
	max.f32 	%f174, %f194, %f126;
	max.f32 	%f175, %f195, %f127;
	max.f32 	%f176, %f196, %f128;

BB0_16:
	add.s32 	%r138, %r138, 1;
	mov.f32 	%f193, %f173;
	mov.f32 	%f194, %f174;
	mov.f32 	%f195, %f175;
	mov.f32 	%f196, %f176;

BB0_17:
	setp.lt.u32	%p24, %r51, 4;
	@%p24 bra 	BB0_27;

BB0_18:
	add.s32 	%r24, %r138, %r77;
	add.s32 	%r109, %r24, %r81;
	setp.ge.s32	%p25, %r24, %r45;
	shr.u32 	%r110, %r24, 31;
	selp.u32	%r111, 1, 0, %p25;
	or.b32  	%r112, %r111, %r110;
	setp.eq.s32	%p26, %r112, 0;
	selp.b32	%r25, %r109, -1, %p26;
	setp.eq.s32	%p27, %r25, -1;
	@%p27 bra 	BB0_20;

	tex.2d.v4.f32.s32	{%f129, %f130, %f131, %f132}, [pooling_param_3, SAMPLER, {%r25, %r15}];
	max.f32 	%f173, %f173, %f129;
	max.f32 	%f174, %f174, %f130;
	max.f32 	%f175, %f175, %f131;
	max.f32 	%f176, %f176, %f132;

BB0_20:
	add.s32 	%r113, %r24, 1;
	add.s32 	%r114, %r113, %r81;
	setp.ge.s32	%p28, %r113, %r45;
	shr.u32 	%r115, %r113, 31;
	selp.u32	%r116, 1, 0, %p28;
	or.b32  	%r117, %r116, %r115;
	setp.eq.s32	%p29, %r117, 0;
	selp.b32	%r26, %r114, -1, %p29;
	setp.eq.s32	%p30, %r26, -1;
	@%p30 bra 	BB0_22;

	tex.2d.v4.f32.s32	{%f133, %f134, %f135, %f136}, [pooling_param_3, SAMPLER, {%r26, %r15}];
	max.f32 	%f173, %f173, %f133;
	max.f32 	%f174, %f174, %f134;
	max.f32 	%f175, %f175, %f135;
	max.f32 	%f176, %f176, %f136;

BB0_22:
	add.s32 	%r118, %r24, 2;
	add.s32 	%r119, %r118, %r81;
	setp.ge.s32	%p31, %r118, %r45;
	shr.u32 	%r120, %r118, 31;
	selp.u32	%r121, 1, 0, %p31;
	or.b32  	%r122, %r121, %r120;
	setp.eq.s32	%p32, %r122, 0;
	selp.b32	%r27, %r119, -1, %p32;
	setp.eq.s32	%p33, %r27, -1;
	@%p33 bra 	BB0_24;

	tex.2d.v4.f32.s32	{%f137, %f138, %f139, %f140}, [pooling_param_3, SAMPLER, {%r27, %r15}];
	max.f32 	%f173, %f173, %f137;
	max.f32 	%f174, %f174, %f138;
	max.f32 	%f175, %f175, %f139;
	max.f32 	%f176, %f176, %f140;

BB0_24:
	add.s32 	%r123, %r24, 3;
	add.s32 	%r124, %r123, %r81;
	setp.ge.s32	%p34, %r123, %r45;
	shr.u32 	%r125, %r123, 31;
	selp.u32	%r126, 1, 0, %p34;
	or.b32  	%r127, %r126, %r125;
	setp.eq.s32	%p35, %r127, 0;
	selp.b32	%r28, %r124, -1, %p35;
	setp.eq.s32	%p36, %r28, -1;
	@%p36 bra 	BB0_26;

	tex.2d.v4.f32.s32	{%f141, %f142, %f143, %f144}, [pooling_param_3, SAMPLER, {%r28, %r15}];
	max.f32 	%f173, %f173, %f141;
	max.f32 	%f174, %f174, %f142;
	max.f32 	%f175, %f175, %f143;
	max.f32 	%f176, %f176, %f144;

BB0_26:
	add.s32 	%r138, %r138, 4;
	setp.lt.s32	%p37, %r138, %r51;
	mov.f32 	%f193, %f173;
	mov.f32 	%f194, %f174;
	mov.f32 	%f195, %f175;
	mov.f32 	%f196, %f176;
	@%p37 bra 	BB0_18;

BB0_27:
	add.s32 	%r137, %r137, 1;
	setp.lt.s32	%p38, %r137, %r50;
	@%p38 bra 	BB0_3;

BB0_28:
	// inline asm
	mad.lo.s32 	%r128, %r1, %r32, %r2;
	// inline asm
	suq.channel_order.b32 	%r132, [pooling_param_9];
	setp.gt.s32	%p39, %r132, 4277;
	@%p39 bra 	BB0_32;

	setp.eq.s32	%p42, %r132, 4273;
	@%p42 bra 	BB0_37;
	bra.uni 	BB0_30;

BB0_37:
	mov.f32 	%f202, 0f00000000;
	mov.f32 	%f201, %f196;
	mov.f32 	%f194, %f202;
	mov.f32 	%f195, %f202;
	bra.uni 	BB0_38;

BB0_32:
	setp.eq.s32	%p40, %r132, 4278;
	@%p40 bra 	BB0_33;

	setp.ne.s32	%p41, %r132, 4279;
	@%p41 bra 	BB0_35;

	mov.f32 	%f201, %f196;
	mov.f32 	%f202, %f193;
	bra.uni 	BB0_38;

BB0_30:
	setp.eq.s32	%p43, %r132, 4275;
	@%p43 bra 	BB0_31;
	bra.uni 	BB0_35;

BB0_31:
	mov.f32 	%f194, 0f00000000;
	mov.f32 	%f201, %f193;
	mov.f32 	%f202, %f196;
	mov.f32 	%f195, %f194;
	bra.uni 	BB0_38;

BB0_33:
	mov.f32 	%f201, %f195;
	mov.f32 	%f202, %f194;
	mov.f32 	%f194, %f193;
	mov.f32 	%f195, %f196;
	bra.uni 	BB0_38;

BB0_35:
	mov.f32 	%f201, %f193;
	mov.f32 	%f202, %f194;
	mov.f32 	%f194, %f195;
	mov.f32 	%f195, %f196;

BB0_38:
	mov.b32 	 %r133, %f201;
	mov.b32 	 %r134, %f202;
	mov.b32 	 %r135, %f194;
	mov.b32 	 %r136, %f195;
	sust.p.2d.v4.b32.trap 	[pooling_param_9, {%r128, %r3}], {%r133, %r134, %r135, %r136};

BB0_39:
	ret;
}


  